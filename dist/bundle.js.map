{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["//\u041E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u0444\u0430\u0439\u043B\u0430.\nclass file {\n    //\u0421\u0432\u043E\u0439\u0441\u0442\u0432\u0430 \u043A\u043B\u0430\u0441\u0441\u0430 File\n    filename: string;  //\u0418\u043C\u044F \u0444\u0430\u0439\u043B\u0430\n    typefile: string; // \u0442\u0438\u043F \u0444\u0430\u0439\u043B\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, txt, pdf, docx)\n    sizeInMB: string;\n    sizeInBytes: string;\n    folder: string; // \u041F\u0430\u043F\u043A\u0430, \u0432 \u043A\u043E\u0442\u043E\u0440\u043E\u0439 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0441\u044F \u0444\u0430\u0439\u043B\n    //\u041A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u043E\u0440 \u043A\u043B\u0430\u0441\u0441\u0430 File\n    constructor(typefile: string, filename: string, sizeInMB: string, siseInbytes: string, folder: string) {\n        //\u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0439\u0441\u0442\u0432\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C\u0438, \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u043A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u043E\u0440\u0443.\n        this.typefile = typefile;\n        this.filename = filename;\n        this.sizeInMB = sizeInMB;\n        this.sizeInBytes = siseInbytes;\n        this.folder = folder;\n    }\n}\nclass params {\n    root: string | null;\n    sort: string | null;\n    constructor(root: string | null, sort: string | null) {\n        this.root = root;\n        this.sort = sort;\n    }\n}\nfunction drawTable(items: file[]): void {\n    const filesTableBody = document.getElementById('filesTableBody') as HTMLTableElement;\n    // \u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432, \u0432 \u043A\u043E\u0442\u043E\u0440\u044B\u0445 \u043C\u044B \u0445\u043E\u0442\u0438\u043C \u043E\u0442\u043E\u0431\u0440\u0430\u0437\u0438\u0442\u044C \u0434\u0430\u043D\u043D\u044B\u0435.\n    items.forEach(file=> {\n        const row = document.createElement('tr') as HTMLTableRowElement;\n        // \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u044F\u0447\u0435\u0439\u043A\u0438 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0441\u0432\u043E\u0439\u0441\u0442\u0432\u0430 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F.\n        const nameCell = document.createElement('td') as HTMLTableCellElement;\n        nameCell.textContent = file.filename;\n\n        const typefileCell = document.createElement('td') as HTMLTableCellElement;\n        typefileCell.textContent = file.typefile;\n        const sizeInBMCell = document.createElement('td') as HTMLTableCellElement;\n        sizeInBMCell.textContent = file.sizeInMB + \" MiB\";\n        const foldeCell = document.createElement('td') as HTMLTableCellElement;\n        foldeCell.textContent = file.folder;\n        // \u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u044F\u0447\u0435\u0439\u043A\u0438 \u0432 \u0441\u0442\u0440\u043E\u043A\u0443\n        row.appendChild(typefileCell);\n        row.appendChild(nameCell);\n        row.appendChild(sizeInBMCell);\n        row.appendChild(foldeCell);\n        // \u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u043E\u043A\u0438 \u0432 \u0442\u0435\u043B\u043E \u0442\u0430\u0431\u043B\u0438\u0446\u044B\n        if (filesTableBody) {\n            filesTableBody.appendChild(row);\n        }\n    });\n}\n// \u041E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u043C \u0430\u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u0443\u044E \u0444\u0443\u043D\u043A\u0446\u0438\u044E fetchData, \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u043F\u0440\u0438\u043D\u0438\u043C\u0430\u0435\u0442 URL-\u0430\u0434\u0440\u0435\u0441 \u043A\u0430\u043A \u0441\u0442\u0440\u043E\u043A\u0443 \u0438 \u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 Promise<void>.\nasync function fetchData(url: string): Promise<void> {\n    try {\n        const response = await fetch(url); // \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C API-\u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0432\u044B\u0431\u043E\u0440\u043A\u0438, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0437\u0430\u043F\u0440\u043E\u0441 GET \u043F\u043E \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u043D\u043E\u043C\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443.\n        if (!response.ok) {  // \u0415\u0441\u043B\u0438 \u043E\u0442\u0432\u0435\u0442 \u043D\u0435 \u043E\u043A (\u0441\u0442\u0430\u0442\u0443\u0441 \u043D\u0435 \u0432 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u0435 200-299), \u0432\u044B\u0434\u0430\u0442\u044C \u043E\u0448\u0438\u0431\u043A\u0443\n            throw new Error(\"\");\n        }\n        console.log(\"Response OK!\"); // \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043C \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435 \u043E\u0431 \u0443\u0441\u043F\u0435\u0445\u0435, \u0435\u0441\u043B\u0438 \u043E\u0442\u0432\u0435\u0442 \u0432 \u043F\u043E\u0440\u044F\u0434\u043A\u0435.\n        const files = await response.json(); // \u0420\u0430\u0437\u0431\u0435\u0440\u0430\u0435\u043C \u0442\u0435\u043B\u043E \u043E\u0442\u0432\u0435\u0442\u0430 \u0432 \u043C\u0430\u0441\u0441\u0438\u0432\u0435 \u0442\u0438\u043F File \u043A\u0430\u043A JSON \u0438 \u0434\u043E\u0436\u0434\u0438\u0442\u0435\u0441\u044C \u0435\u0433\u043E \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u044F.\n        console.log('Files:', files.Files);\n        console.log('Elapsedtime:', files.elapsedtime);\n        drawTable(files.Files);\n        Drawelapsedtime(files.elapsedtime);\n        DrawpathName(files.pathName);\n        // \u0412\u044B\u0437\u043E\u0432 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u0434\u043B\u044F \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0432 \u0442\u0430\u0431\u043B\u0438\u0446\u0435\n    } catch (error) {\n        console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0438 \u0437\u0430\u043F\u0440\u043E\u0441\u0430:', error);\n    }\n}\n\nfunction navigateBack() {\n    const currentUrl = new URL(window.location.href);\n    const rootParam = currentUrl.searchParams.get('root');\n    if (rootParam) {\n        const rootParts = rootParam.split('/');\n        rootParts.pop();\n        const newRoot = rootParts.join('/');\n        currentUrl.searchParams.set('root', newRoot);\n        window.location.href = currentUrl.toString();\n    }\n}\n\n// insertar texto en el botton con id:elapsedtime.\nfunction Drawelapsedtime(param: any) {\n    const elapsedtimeId = document.getElementById('btn-elapsedtime')\n    if (elapsedtimeId) {\n        elapsedtimeId.textContent = 'Elased:' + ' ' + param;\n    }\n}\nfunction DrawpathName(param: any) {\n    const elapsedtimeId = document.getElementById('pathName')\n    if (elapsedtimeId) {\n        elapsedtimeId.textContent = 'PathName:' + ' ' + param;\n    }\n}\nfunction getJsonDatalink():string{\n    const url = new URL(window.location.href); // files;\n    url.pathname += \"./files\";\n    let newULR = url.toString();\n    return newULR;\n}\n//\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u00ABparams\u00BB \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u043E\u0432 \u00ABroot\u00BB \u0438 \u00ABsort\u00BB.\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    //const url = new URL(window.location.href); // files;\n    //url.pathname += \"./files\";\n    let newULR = getJsonDatalink();\n    fetchData(newULR);\n    const backbuttom = document.getElementById('backButton');\n    if(backbuttom){\n        backbuttom.addEventListener(\"click\", navigateBack);\n    }\n})\n\ndocument.addEventListener('readystatechange', () => {\n    var state = '';\n    if (document.readyState === \"loading\") {\n        state = \"Loading\";\n    } else if (document.readyState === \"interactive\") {\n        state = \"Loading...\";\n    } else if (document.readyState === \"complete\") {\n        state = \"Loading......\";\n    }\n    updateProgressBar(state);\n});\n\nfunction updateProgressBar(state: string): void {\n    const progressBar = document.getElementById('progressBar') as HTMLDivElement;\n    const progressText = document.createElement('span');\n    progressText.textContent = state;\n    progressBar.innerHTML = ''; // Clear any previous content\n    progressBar.appendChild(progressText);\n\n    // Update the width of the progress bar based on the state\n    if (state === \"Loading\") {\n        progressBar.style.width = \"33%\";\n    } else if (state === \"Loading...\") {\n        progressBar.style.width = \"66%\";\n    } else if (state === \"Loading......\") {\n        progressBar.style.width = \"100%\";\n    }\n}\n\nfunction HandleCellClick(event: MouseEvent): void {\n    // Check if the clicked element is a TD element\n    if ((event.target as HTMLElement).tagName === 'TD') {\n        // Get the text content of the clicked cell\n        const cellText = (event.target as HTMLElement).textContent;\n        UpadateRoot(cellText);\n    }\n}\n//\u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u0442, \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043B\u0438 \u0438\u043C\u044F_\u0442\u0430\u0431\u043B\u0438\u0446\u044B \u043D\u0443\u043B\u0435\u0432\u044B\u043C. \u0415\u0441\u043B\u0438 tableName \u043D\u0435 \u0440\u0430\u0432\u043D\u043E \u043D\u0443\u043B\u044E, \u043A \n//\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0443 tableName \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043F\u0440\u043E\u0441\u043B\u0443\u0448\u0438\u0432\u0430\u0442\u0435\u043B\u044C \u0441\u043E\u0431\u044B\u0442\u0438\u0439, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u043E\u0441\u043B\u0443\u0448\u0438\u0432\u0430\u0435\u0442 \u0441\u043E\u0431\u044B\u0442\u0438\u044F \u0449\u0435\u043B\u0447\u043A\u0430.\n const tableName = document.getElementById('filesTable');\nif (tableName) {\n    tableName.addEventListener('click', HandleCellClick)\n}\n//\u0424\u0443\u043D\u043A\u0446\u0438\u044F SetwindowsParams \u043F\u0440\u0438\u043D\u0438\u043C\u0430\u0435\u0442 \u0441\u0442\u0440\u043E\u043A\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 Celldt, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043C\u043E\u0436\u0435\u0442 \n// \u0431\u044B\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u043E\u0432\u044B\u043C \u0438\u043B\u0438 \u043D\u0443\u043B\u0435\u0432\u044B\u043C. \u0417\u0430\u0442\u0435\u043C \u043E\u043D \u0441\u043E\u0437\u0434\u0430\u0435\u0442 \u043D\u043E\u0432\u044B\u0439 \u043E\u0431\u044A\u0435\u043A\u0442 URL \u0438\u0437 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u043C\u0435\u0441\u0442\u043E\u043F\u043E\u043B\u043E\u0436\u0435\u043D\u0438\u044F \u043E\u043A\u043D\u0430.\nfunction UpadateRoot(Celldt: string | null): void {\n    const url = new URL(window.location.href);\n    try {\n        if (Celldt) {\n            url.searchParams.set('root', Celldt);\n            window.location.href = url.toString();\n        }\n    } catch (error) {\n        console.error(\"\u0414\u0430\u043D\u043D\u044B\u0435 \u044F\u0447\u0435\u0439\u043A\u0438 \u043D\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0442!\", error);\n    }\n}"],
  "mappings": "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",
  "names": []
}
