{
  "version": 3,
  "sources": ["../src/view.ts", "../src/model.ts", "../src/controller.ts", "../src/index.ts"],
  "sourcesContent": ["\nimport { File } from \"./model\";\nexport function saveUrlWithRootAndSort(rootValue: string, sortValue: string): string {\n    const currentUrl = new URL(window.location.href);\n    const newUrl = new URL(`${currentUrl.protocol}//${currentUrl.hostname}${currentUrl.port ? ':' + currentUrl.port : ''}`);\n    newUrl.pathname = './files'; // Set the path to './files'\n    newUrl.searchParams.set('root', rootValue);\n    newUrl.searchParams.set('sort', sortValue);\n    const urlString = newUrl.toString();\n\n    return urlString;\n}\n\nexport function drawelapsedtime(param: any) {\n    const elapsedtimeId = document.getElementById('btn-elapsedtime')\n    if (elapsedtimeId) {\n        elapsedtimeId.textContent = 'Elased:' + ' ' + param;\n    }\n}\n\nexport function drawpathName(param: any) {\n    const elapsedtimeId = document.getElementById('pathName')\n    if (elapsedtimeId) {\n        elapsedtimeId.textContent = 'PathName:' + ' ' + param;\n    }\n}\n\nexport function drawTable(data: File[]): void {\n    const tableBody = document.getElementById('filesTable') as HTMLTableSectionElement;\n    if (!tableBody) return;\n\n    tableBody.innerHTML = ''; // Clear existing rows\n     // Create the table header element\n    const thead = document.createElement('thead');\n    const headerRow = document.createElement('tr');\n\n    // Create the header cells\n    const typeHeader = document.createElement('th');\n    typeHeader.textContent = 'Type';\n    headerRow.appendChild(typeHeader);\n\n    const directoryPathNameHeader = document.createElement('th');\n    directoryPathNameHeader.textContent = 'Directory Path Name';\n    headerRow.appendChild(directoryPathNameHeader);\n\n    const sizeHeader = document.createElement('th');\n    sizeHeader.textContent = 'Size';\n    headerRow.appendChild(sizeHeader);\n\n    const kindHeader = document.createElement('th');\n    kindHeader.textContent = 'Kind';\n    headerRow.appendChild(kindHeader);\n\n    // Append the header row to the table header\n    thead.appendChild(headerRow);\n\n    tableBody.appendChild(thead);\n    data.forEach(item => {\n        const row = document.createElement('tr');\n\n        const typefileCell = document.createElement('td');\n        typefileCell.textContent = item.typefile;\n        row.appendChild(typefileCell);\n\n        const filenameCell = document.createElement('td');\n        filenameCell.textContent = item.filename;\n        row.appendChild(filenameCell);\n\n        const sizeInMBCell = document.createElement('td');\n        sizeInMBCell.textContent = item.sizeInMB + \" MB\"; \n        row.appendChild(sizeInMBCell);\n\n        const folderCell = document.createElement('td');\n        folderCell.textContent = item.folder;\n        row.appendChild(folderCell);\n        \n        tableBody.appendChild(row);\n    });\n}\n\n\n  export function styleLoadingMessage(message: HTMLParagraphElement) {\n    message.style.fontSize = '1.5em'; // Set a larger font size\n    message.style.position = 'absolute'; // Position the element absolute to the nearest positioned ancestor\n    message.style.top = '0'; // Set the top position\n    message.style.left = '0'; // Set the left position to the top-left corner\n    message.style.width = '100%'; // Make the element span the full width\n    message.style.textAlign = 'center'; // Center the text horizontally\n    message.style.padding = '10px'; // Add some padding for better visibility\n    message.style.backgroundColor = 'rgba(255, 255, 255, 0.8)'; // Add a background color\n    message.style.borderRadius = '5px'; // Add rounded corners\n    message.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.2)'; // Add a shadow for depth\n    message.style.color = 'blue'; // Change the text color to blue\n  }\n\nexport function removeParag():void{\n    const existingLoadingMessages = document.querySelectorAll('p');\n    existingLoadingMessages.forEach((message) => {\n      if (message.textContent === 'Loading...') {\n        message.remove();\n      }\n    });\n}\n\n  ", "import { styleLoadingMessage } from \"./view\";\n//\u041E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u043C \u043A\u043B\u0430\u0441\u0441 \u0444\u0430\u0439\u043B\u0430.\nexport class File {\n    //\u0421\u0432\u043E\u0439\u0441\u0442\u0432\u0430 \u043A\u043B\u0430\u0441\u0441\u0430 File\n    filename: string;  //\u0418\u043C\u044F \u0444\u0430\u0439\u043B\u0430\n    typefile: string; // \u0442\u0438\u043F \u0444\u0430\u0439\u043B\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, txt, pdf, docx)\n    sizeInMB: string;\n    sizeInBytes: string;\n    folder: string; // \u041F\u0430\u043F\u043A\u0430, \u0432 \u043A\u043E\u0442\u043E\u0440\u043E\u0439 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0441\u044F \u0444\u0430\u0439\u043B\n    //\u041A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u043E\u0440 \u043A\u043B\u0430\u0441\u0441\u0430 File\n    constructor(typefile: string, filename: string, sizeInMB: string, siseInbytes: string, folder: string) {\n        //\u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0439\u0441\u0442\u0432\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C\u0438, \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u043A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u043E\u0440\u0443.\n        this.typefile = typefile;\n        this.filename = filename;\n        this.sizeInMB = sizeInMB;\n        this.sizeInBytes = siseInbytes;\n        this.folder = folder;\n    }\n}\nexport class params {\n    root: string | null;\n    sort: string | null;\n    constructor(root: string | null, sort: string | null) {\n        this.root = root;\n        this.sort = sort;\n    }\n}\nasync function getJson(url:string):Promise<any> {\n    try{\n        const loadingMessage = document.createElement('p') as HTMLParagraphElement;\n        loadingMessage.textContent = 'Loading...';\n        styleLoadingMessage(loadingMessage);\n        document.body.appendChild(loadingMessage);\n        const response = await fetch(url);\n        const data = response.json();\n        loadingMessage.style.display = 'none';\n        return data;\n    }catch(error){\n        console.error('Error fetching data:', error);\n        throw error;\n    }\n    \n}\nexport{getJson}\n\nexport function moveBackFromRoot(path: string): string {\n    const parts = path.split('/');\n    parts.pop();\n    const newPath = parts.join('/');\n    \n    return newPath;\n}\nexport function getSort():string{\n    const url = new URL(window.location.href); // files\n    return url.searchParams.get(\"sort\")|| \"\";\n}\n\n", "import { getJson, getSort,moveBackFromRoot} from \"./model\";\nimport {drawpathName, saveUrlWithRootAndSort,drawelapsedtime,drawTable,removeParag} from \"./view\";\nconst url = new URL(window.location.href); \nurl.pathname += \"./files\";\nconst urlString = url.toString();\ndocument.addEventListener('DOMContentLoaded', async () => {\n    removeParag();\n    const data = await getJson(urlString);\n    drawTable(data.Files);\n    drawpathName(data.pathName);\n    drawelapsedtime(data.elapsedtime);\n})\nconst table = document.getElementById('filesTable') as HTMLTableElement;\ntable.addEventListener('click', (event: MouseEvent) => {\n    removeParag();\n    const rowData = handleCellClick(event);\n    if (rowData) {\n        if (rowData[0] == \"\u041A\u0430\u0442\u0430\u043B\u043E\u0433\") {\n            let link = saveUrlWithRootAndSort(rowData[1], getSort());\n            getJson(link).then(data => {\n                drawTable(data.Files);\n                drawpathName(data.pathName);\n                drawelapsedtime(data.elapsedtime);\n            }).catch(error => {\n                console.error('Error fetching JSON data:', error);\n            });\n        }\n    }\n});\n\nfunction handleCellClick(event: MouseEvent): string[] | null {\n    const target = event.target as HTMLElement;\n    if (target.tagName === 'TD') {\n        const row = target.parentNode as HTMLTableRowElement;\n        const rowData = Array.from(row.cells).map(cell => cell.innerText);\n        return rowData;\n    }\n    return null;\n}\nconst button = document.getElementById('moveBackButton') as HTMLButtonElement;\nbutton.addEventListener('click', () => {\n    removeParag();\n    const currentRootElement = document.getElementById('pathName') as HTMLParagraphElement;\n    const currentRoot = currentRootElement.textContent || '';\n    if(currentRoot!==null){\n        let newRoot = moveBackFromRoot(currentRoot);\n        currentRootElement.textContent = newRoot;\n        newRoot = newRoot.replace(\"PathName: \", \"\");\n        let link = saveUrlWithRootAndSort(newRoot, getSort());\n        getJson(link).then(data => {\n            drawTable(data.Files);\n            drawpathName(data.pathName);\n            drawelapsedtime(data.elapsedtime);\n        }).catch(error => {\n            console.error('Error fetching JSON data:', error);\n        });\n    }\n});\n", "\nexport * from './controller';\nexport * from './model';\nexport * from './view';"],
  "mappings": "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",
  "names": []
}
